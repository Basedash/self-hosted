version: '3'
services:
  app:
    container_name: basedash-app
    image: basedash/basedash
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file: ./docker.env
    ports:
      - "5000:5000"
    restart: unless-stopped
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data/:/var/lib/rabbitmq/
      - rabbitmq-logs/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  db:
    container_name: basedash-db
    image: postgres:12.2
    restart: always
    ports:
      - '5432:5432'
    env_file: ./docker.env
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
      - dhparam:/etc/ssl/certs
    depends_on:
      - app
  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
      - web-root:/var/www/html
    # Replace with your domain name and replace --staging with --force-renewal after initial certificate has been issues
    command: certonly --webroot --webroot-path=/var/www/html --email your-email@domain.com --agree-tos --no-eff-email --staging -d basedash.fm
volumes:
  db:
  certbot-etc:
  certbot-var:
  dhparam:
  web-root:
